#!/bin/bash

HS=~/github/_OLD/HotSpot

if [ "$1" == "" ]; then
	echo "Provide benchmark name as parameter!"
	exit
fi

if [ "$2" == "" ]; then
	echo "Provide layer count!"
	exit
fi

DUMMY_FP=$1_HotSpot_Si_active_1.flp
PTRACE=$1_HotSpot.ptrace
GRID_LCF=$1_HotSpot.lcf
STEADY_OUTPUT=$1_HotSpot.steady
STEADY_GRID_OUTPUT=$1_HotSpot.steady.grid
TTRACE=$1_HotSpot.ttrace
LOG_STEADY=$1_HotSpot.steady.log
LOG_TRANSIENT=$1_HotSpot.transient.log
CONFIG=hotspot_heatsink.config

# perform (steady-state) HS call
echo "Perform HotSpot run ..."
echo "$HS/hotspot -c $CONFIG -f $DUMMY_FP -p $PTRACE -grid_steady_file $STEADY_GRID_OUTPUT -steady_file $STEADY_OUTPUT -detailed_3D on -grid_layer_file $GRID_LCF > $LOG_STEADY"
time $HS/hotspot -c $CONFIG -f $DUMMY_FP -p $PTRACE -grid_steady_file $STEADY_GRID_OUTPUT -steady_file $STEADY_OUTPUT -detailed_3D on -grid_layer_file $GRID_LCF > $LOG_STEADY
STATUS=$?

if [ "$STATUS" == "0" ]; then

	# log hottest block
	tail -n1 $LOG_STEADY

	# render temperature maps using gnuplot script generated by Corblivar
	for (( die = 1; die <= $2; die++ ))
	do
		echo "Render gp temperature map for die $die"

		gnuplot $1"_"$die"_HotSpot.gp"
	done
else
	echo "Some error occurred; check log file \"$LOG_STEADY\" for more details."
fi

# perform transient HS call after steady-state run if asked for
if [ "$3" == "transient" ]; then

	echo "Perform HotSpot transient run ..."
	echo "$HS/hotspot -c $CONFIG -init_file $STEADY_OUTPUT -f $DUMMY_FP -p $PTRACE -detailed_3D on -grid_layer_file $GRID_LCF -o $TTRACE > $LOG_TRANSIENT"
	time $HS/hotspot -c $CONFIG -init_file $STEADY_OUTPUT -f $DUMMY_FP -p $PTRACE -detailed_3D on -grid_layer_file $GRID_LCF -o $TTRACE > $LOG_TRANSIENT
	STATUS=$?

	if [ "$STATUS" != "0" ]; then
		echo "Some error occurred; check log file \"$LOG_STEADY\" for more details."
	fi
fi
